{"ast":null,"code":"var _jsxFileName = \"/home/operator3/\\u0414\\u043E\\u043A\\u0443\\u043C\\u0435\\u043D\\u0442\\u044B/newBD/front/src/components/pages/Countries.jsx\",\n    _s = $RefreshSig$();\n\nimport { useSelector } from 'react-redux';\nimport { Header } from '../ui-components/Header'; // import cl from '../../../styles/Info.module.css';\n\nimport { useState, useMemo } from 'react'; // import Image from '../../ui-components/Image';\n\nimport { Container, DropdownButton, Dropdown, Image } from 'react-bootstrap';\nimport fs from 'fs';\nimport { useEffect } from 'react';\nimport axios from 'axios';\nimport { TableComp } from '../ui-components/TableComp';\nimport { TableChars } from '../ui-components/TableChars';\nimport { Modal, Button } from 'react-bootstrap'; //const fetch = require('node-fetch');\n\nimport cl from '../../styles/Countries.module.css';\nimport { AddModal } from '../modals/AddModal';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const Countries = props => {\n  _s();\n\n  //let arr = countries;\n  // let jsx = '';\n  // for (let el of arr)\n  // {\n  //     let fields = el.to;\n  //     jsx += <p>{el.name}</p>\n  //     for (let fi of fields)\n  //         jsx += <li>{fi}</li>\n  // }\n  let init = [];\n  const [body, setBody] = useState(init);\n  const [str, setStr] = useState({\n    country: 'Россия',\n    name: ''\n  });\n  const [isload, setLoad] = useState(false);\n  const [countNames, setCountNames] = useState([]);\n  const [countries, setCountries] = useState({});\n  const [filteredCountries, setFilteredCountries] = useState({});\n  const [urlName, setUrlName] = useState('');\n  const [name, setName] = useState('');\n  const [fname, setFname] = useState('');\n  const [capture, setCaptureFile] = useState({});\n  const [visible, setVisible] = useState(false);\n  const [showModal, setShowModal] = useState(false);\n  const [showAddModal, setShowAddModal] = useState(false);\n  const [country, setCountry] = useState('Россия');\n  const [chars, setChars] = useState({});\n  const bodyStatic = ['Зига', \"Твой\", \"Дом\"];\n  const sortArr = [\"По дате\", 'По имени'];\n  const [sort, setSort] = useState('По дате');\n  console.log('country', countries);\n  const HeaderMemo = useMemo(() => Header, []);\n  useEffect(async () => {\n    setLoad(false);\n    let fetchCounts;\n    fetchCounts = await axios.get('http://localhost:5000/countries');\n    fetchCounts = fetchCounts.data.countries;\n    setCountries([...fetchCounts]);\n    setFilteredCountries([...fetchCounts]);\n    setCountNames(fetchCounts.map(el => el.name));\n    setLoad(true);\n    console.log('countries', countries);\n  }, [countries.length]);\n  useEffect(async () => {\n    if (countries != undefined && countries.length) {\n      console.log('Сработал');\n      const cou = {\n        \"name\": \"США\",\n        \"to\": [\"RQ-11 Raven\", \"Wasp III\", \"RQ-20 Puma\", \"RQ-16 T-Hawk\", \"MQ-9 Reaper\", \"RQ-4 Global Hawk\", \"RQ-170 Sentinel\"]\n      };\n      console.log('defcountriesbef', countries);\n\n      if (sort == 'По имени') {\n        // setFilteredCountries(prev => {\n        //     prev.map(c => {\n        //         c.to = c.to.sort();\n        //         return c;\n        //     });\n        //     return prev;\n        // })\n        await setFilteredCountries(prev => {\n          console.log('prevbefore', prev.length);\n          prev.push(cou);\n          console.log('prevafter', prev.length);\n          return prev;\n        });\n        console.log('По имени', countries, filteredCountries);\n      } else {\n        setFilteredCountries([...countries]);\n        console.log('По дате', countries, filteredCountries);\n      }\n\n      console.log('defcountries', countries);\n      console.log('filteted', filteredCountries);\n    }\n  }, [sort]); //console.log(jsx)                 {\n  //                 countNames.map(el => <option>{el}</option>)\n  //                }\n\n  const showPic = (flag, name) => {\n    setUrlName(`http://localhost:5000/image?name=${name}`);\n    setVisible(flag);\n  };\n\n  const setNameFunc = e => {\n    setStr(prev => {\n      return { ...prev,\n        name: e.target.value\n      };\n    });\n  };\n\n  const getImage = async name => {\n    console.log('infunc');\n    let img = (await axios.get(`http://localhost:5000/image?name=${name}`)).data;\n    console.log('img', img);\n    return img;\n  };\n\n  const openModal = async name => {\n    console.log('aame', name);\n    setShowModal(true);\n    setName(name);\n    let chars = (await axios.get(`http://localhost:5000/info?name=${name}`)).data; //console.log('chars', chars);\n\n    setChars(chars);\n  };\n\n  const addNote = () => {\n    setShowAddModal(true);\n  };\n\n  const add = () => {\n    console.log('capt', capture);\n    const data = new FormData();\n    data.append('file', capture); //capture.map(dat => URL.createObjectURL(dat));\n\n    let url = URL.createObjectURL(capture);\n    console.log('url', url);\n    axios.post('http://localhost:5000/upload', data, {\n      headers: {\n        \"Content-type\": \"form/multipart\"\n      }\n    });\n  };\n\n  return isload ? /*#__PURE__*/_jsxDEV(\"div\", {\n    className: cl.Countries,\n    children: [/*#__PURE__*/_jsxDEV(HeaderMemo, {\n      name: \"\\u0421\\u0442\\u0440\\u0430\\u043D\\u044B \\u043B\\u0438\\u0434\\u0435\\u0440\\u044B \\u043F\\u043E \\u043F\\u0440\\u043E\\u0438\\u0437\\u0432\\u043E\\u0434\\u0441\\u0442\\u0432\\u0443 \\u0411\\u041F\\u041B\\u0410\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 161,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          display: 'flex',\n          flexDirection: 'row',\n          justifyContent: 'space-between'\n        },\n        children: filteredCountries.length ? filteredCountries.map(count => {\n          return /*#__PURE__*/_jsxDEV(TableComp, {\n            style: {\n              width: '30px'\n            },\n            header: count.name,\n            body: count.to,\n            onOver: (flag, name) => showPic(flag, name),\n            onOut: (flag, name) => showPic(flag, name),\n            onClick: name => openModal(name),\n            propFlag: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 169,\n            columnNumber: 33\n          }, this);\n        }) : /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"\\u0416\\u0434\\u0438\\u0442\\u0435\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 183,\n          columnNumber: 25\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 163,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          display: 'flex',\n          flexDirection: 'row'\n        },\n        children: [/*#__PURE__*/_jsxDEV(Button, {\n          style: {\n            margin: '10px'\n          },\n          onClick: addNote,\n          children: \"+\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 187,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(DropdownButton, {\n          style: {\n            margin: '10px'\n          },\n          title: sort,\n          onSelect: e => setSort(e),\n          children: sortArr.map(el => /*#__PURE__*/_jsxDEV(Dropdown.Item, {\n            eventKey: el,\n            children: el\n          }, el, false, {\n            fileName: _jsxFileName,\n            lineNumber: 195,\n            columnNumber: 33\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 188,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 186,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 162,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        display: visible ? 'flex' : 'none'\n      },\n      children: /*#__PURE__*/_jsxDEV(Image, {\n        src: urlName,\n        style: {\n          width: '320px',\n          height: '240px'\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 208,\n        columnNumber: 25\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 207,\n      columnNumber: 21\n    }, this), /*#__PURE__*/_jsxDEV(Modal, {\n      show: showModal,\n      onHide: () => setShowModal(false),\n      backdrop: \" static \",\n      keyboard: false,\n      children: [/*#__PURE__*/_jsxDEV(Modal.Header, {\n        closeButton: true,\n        children: /*#__PURE__*/_jsxDEV(Modal.Title, {\n          children: [\" \", name]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 217,\n          columnNumber: 25\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 216,\n        columnNumber: 25\n      }, this), /*#__PURE__*/_jsxDEV(Modal.Body, {\n        children: [/*#__PURE__*/_jsxDEV(TableChars, {\n          header: name,\n          body: chars\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 220,\n          columnNumber: 29\n        }, this), /*#__PURE__*/_jsxDEV(Image, {\n          src: urlName,\n          style: {\n            width: '320px',\n            height: '240px',\n            margin: '10px'\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 224,\n          columnNumber: 29\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 219,\n        columnNumber: 25\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 210,\n      columnNumber: 21\n    }, this), /*#__PURE__*/_jsxDEV(AddModal, {\n      show: showAddModal,\n      setShow: setShowAddModal,\n      setItem: setCountry,\n      item: country,\n      title: \"\\u0414\\u043E\\u0431\\u0430\\u0432\\u0438\\u0442\\u044C\",\n      countries: countNames,\n      name: name,\n      setName: setName,\n      fname: fname,\n      setFname: setFname,\n      setCaptureFile: setCaptureFile,\n      capture: capture,\n      add: add\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 228,\n      columnNumber: 21\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 160,\n    columnNumber: 13\n  }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n    children: \"\\u041F\\u0430\\u0434\\u0430\\u0436\\u0436\\u0438\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 245,\n    columnNumber: 13\n  }, this);\n};\n\n_s(Countries, \"+YCFH+oMunIyGeBmxks9z9SdsWE=\");\n\n_c = Countries;\n\nvar _c;\n\n$RefreshReg$(_c, \"Countries\");","map":{"version":3,"sources":["/home/operator3/Документы/newBD/front/src/components/pages/Countries.jsx"],"names":["useSelector","Header","useState","useMemo","Container","DropdownButton","Dropdown","Image","fs","useEffect","axios","TableComp","TableChars","Modal","Button","cl","AddModal","Countries","props","init","body","setBody","str","setStr","country","name","isload","setLoad","countNames","setCountNames","countries","setCountries","filteredCountries","setFilteredCountries","urlName","setUrlName","setName","fname","setFname","capture","setCaptureFile","visible","setVisible","showModal","setShowModal","showAddModal","setShowAddModal","setCountry","chars","setChars","bodyStatic","sortArr","sort","setSort","console","log","HeaderMemo","fetchCounts","get","data","map","el","length","undefined","cou","prev","push","showPic","flag","setNameFunc","e","target","value","getImage","img","openModal","addNote","add","FormData","append","url","URL","createObjectURL","post","headers","display","flexDirection","justifyContent","count","width","to","margin","height"],"mappings":"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","sourcesContent":["import { useSelector } from 'react-redux';\nimport {Header} from '../ui-components/Header'\n// import cl from '../../../styles/Info.module.css';\n\nimport { useState, useMemo } from 'react';\n// import Image from '../../ui-components/Image';\nimport { Container, DropdownButton, Dropdown, Image } from 'react-bootstrap';\nimport fs from 'fs';\nimport { useEffect } from 'react';\nimport axios from 'axios';\nimport { TableComp } from '../ui-components/TableComp';\nimport { TableChars } from '../ui-components/TableChars';\nimport { Modal, Button } from 'react-bootstrap';\n//const fetch = require('node-fetch');\nimport cl from '../../styles/Countries.module.css'\nimport { AddModal } from '../modals/AddModal';\nexport const Countries = (props) => {\n\n    //let arr = countries;\n    // let jsx = '';\n    // for (let el of arr)\n    // {\n    //     let fields = el.to;\n    //     jsx += <p>{el.name}</p>\n    //     for (let fi of fields)\n    //         jsx += <li>{fi}</li>\n    // }\n    \n    let init = []\n    const [body, setBody] = useState(init);\n    const [str, setStr] = useState({ country: 'Россия', name: '' });\n    const [isload, setLoad] = useState(false);\n    const [countNames, setCountNames] = useState([]);\n    const [countries, setCountries] = useState({});\n    const [filteredCountries, setFilteredCountries] = useState({});\n    const [urlName, setUrlName] = useState('');\n    const [name, setName] = useState('');\n    const [fname, setFname] = useState('');\n    const [capture, setCaptureFile] = useState({});\n    const [visible, setVisible] = useState(false);\n    const [showModal, setShowModal] = useState(false);\n    const [showAddModal, setShowAddModal] = useState(false);\n    const [country, setCountry] = useState('Россия')\n    const [chars, setChars] = useState({});\n    const bodyStatic = ['Зига', \"Твой\", \"Дом\"];\n\n    const sortArr = [\"По дате\", 'По имени'];\n    const [sort, setSort] = useState('По дате')\n    console.log('country', countries);\n\n    const HeaderMemo = useMemo(() => Header, [])\n    useEffect(async () => {\n        setLoad(false);\n        let fetchCounts;\n        fetchCounts = await axios.get('http://localhost:5000/countries');\n        fetchCounts = fetchCounts.data.countries;\n        setCountries([...fetchCounts]);\n        setFilteredCountries([...fetchCounts]);\n        setCountNames(fetchCounts.map(el => el.name));\n        setLoad(true);\n        console.log('countries', countries);\n    }, [countries.length]);\n\n    useEffect(async () => {\n        if (countries != undefined && countries.length) {\n            console.log('Сработал');\n            const cou = {\n                \"name\": \"США\",\n                \"to\": [\n                          \"RQ-11 Raven\",\n                          \"Wasp III\",\n                          \"RQ-20 Puma\",\n                          \"RQ-16 T-Hawk\",\n                          \"MQ-9 Reaper\",\n                          \"RQ-4 Global Hawk\",\n                          \"RQ-170 Sentinel\"\n                ]\n      };\n            console.log('defcountriesbef', countries);\n            if (sort == 'По имени') {\n                // setFilteredCountries(prev => {\n                //     prev.map(c => {\n                //         c.to = c.to.sort();\n                //         return c;\n                //     });\n                //     return prev;\n                // })\n                await setFilteredCountries(prev => {\n                    console.log('prevbefore', prev.length);\n                    prev.push(cou); \n                    console.log('prevafter', prev.length);\n                    return prev;\n                });\n                console.log('По имени', countries, filteredCountries);\n\n            }\n\n            else {\n                setFilteredCountries([...countries]);\n                console.log('По дате', countries, filteredCountries);\n            }\n                \n            console.log('defcountries', countries);\n            console.log('filteted', filteredCountries);\n            \n        }\n\n    }, [sort])\n    //console.log(jsx)                 {\n    //                 countNames.map(el => <option>{el}</option>)\n    //                }\n    const showPic = (flag, name) => {\n        setUrlName(`http://localhost:5000/image?name=${name}`);\n        setVisible(flag);\n        \n    }\n\n    const setNameFunc = (e) => {\n        setStr(prev => {\n            return { ...prev, name: e.target.value };\n        })\n    }\n\n    const getImage = async (name) => {\n        console.log('infunc');\n         let img = (await axios.get(`http://localhost:5000/image?name=${name}`)).data;\n         console.log('img', img);\n         return img;\n    }\n\n    const openModal = async (name) => {\n        console.log('aame', name);\n        setShowModal(true);\n        setName(name);\n        let chars = (await axios.get(`http://localhost:5000/info?name=${name}`)).data;\n        //console.log('chars', chars);\n        setChars(chars);\n    }\n\n    const addNote = () => {\n        setShowAddModal(true);\n    }\n\n    const add = () => {\n        console.log('capt', capture);\n        const data = new FormData();\n        data.append('file', capture);\n        //capture.map(dat => URL.createObjectURL(dat));\n        let url = URL.createObjectURL(capture);\n        console.log('url', url);\n        axios.post('http://localhost:5000/upload', data, {\n            headers: {\n                \"Content-type\": \"form/multipart\"\n            }\n        });\n\n    }\n    return (\n        isload ?\n            <div className={cl.Countries}>\n                <HeaderMemo name=\"Страны лидеры по производству БПЛА\" />\n                <div>\n                    <div style={{display: 'flex', flexDirection: 'row', justifyContent: 'space-between'}}>\n                        {\n                        filteredCountries.length ?\n                        (\n                            filteredCountries.map(count => {\n                            return (\n                                <TableComp\n                                    style={{width: '30px'}}\n                                    header={count.name}\n                                    body={count.to}\n                                    onOver={(flag, name) => showPic(flag, name)}\n                                    onOut={(flag, name) => showPic(flag, name)}\n                                    onClick={(name) => openModal(name)}\n                                    propFlag={true}\n                                />\n                            )\n\n                        })\n                        )\n                        :\n                        <p>Ждите</p>\n                        }\n                    </div>\n                    <div style={{display: 'flex', flexDirection: 'row'}}>\n                        <Button style={{margin: '10px'}} onClick={addNote}>+</Button>\n                        <DropdownButton\n                            style={{margin: '10px'}}\n                            title={sort}\n                            onSelect={e => setSort(e)}\n                        >\n                        {\n                            sortArr.map(el =>\n                                <Dropdown.Item\n                                    key={el}\n                                    eventKey={el}\n                                >\n                                    {el}\n                                </Dropdown.Item>\n                                )\n                        }\n                        </DropdownButton>\n                    </div>\n                    \n                </div>\n                    <div style={{display: visible ? 'flex' : 'none'}}>\n                        <Image src={urlName} style={{width: '320px', height: '240px'}} />\n                    </div>\n                    <Modal\n                        show ={ showModal }\n                        onHide={() => setShowModal(false)}\n                        backdrop =\" static \"\n                        keyboard ={ false }\n                    >\n                        < Modal.Header closeButton >\n                        < Modal.Title > {name}</ Modal.Title >\n                        </ Modal.Header >\n                        < Modal.Body >\n                            <TableChars\n                                header={name}\n                                body={chars}\n                            />\n                            <Image src={urlName} style={{width: '320px', height: '240px', margin: '10px'}} />\n                        </Modal.Body >\n                    </ Modal >\n\n                    <AddModal\n                        show={showAddModal}\n                        setShow={setShowAddModal}\n                        setItem={setCountry}\n                        item={country}\n                        title=\"Добавить\"\n                        countries={countNames}\n                        name={name}\n                        setName={setName}\n                        fname={fname}\n                        setFname={setFname}\n                        setCaptureFile={setCaptureFile}\n                        capture={capture}\n                        add={add}\n                    />\n            </div>\n            :\n            <div>\n                Падажжи\n            </div>\n            \n    );\n}\n"]},"metadata":{},"sourceType":"module"}