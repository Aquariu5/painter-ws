{"ast":null,"code":"import { makeAutoObservable } from 'mobx';\n\nclass Toolbar {\n  //wsId = null;\n  constructor() {\n    this.toolbar = null;\n    this.canvas = null;\n    this.context = null;\n    this.toggle = false;\n    this.ws = null;\n    this.ownname = null;\n    this.names = [{\n      name: 'ziga',\n      x: 0,\n      y: 0\n    }, {\n      name: 'twoi',\n      x: 0,\n      y: 0\n    }];\n\n    this.down = e => {\n      this.toggle = true;\n      this.context.beginPath();\n      this.context.moveTo(e.pageX - e.target.offsetLeft, e.pageY - e.target.offsetTop);\n      this.ws.send(JSON.stringify({\n        method: 'paint',\n        x: e.pageX - e.target.offsetLeft,\n        y: e.pageY - e.target.offsetTop,\n        action: 'down',\n        name: this.ownname\n      }));\n    };\n\n    this.up = e => {\n      this.toggle = false;\n    };\n\n    this.move = e => {\n      if (this.toggle) {\n        this.context.lineTo(e.pageX - e.target.offsetLeft, e.pageY - e.target.offsetTop);\n        this.ws.send(JSON.stringify({\n          method: 'paint',\n          x: e.pageX - e.target.offsetLeft,\n          y: e.pageY - e.target.offsetTop,\n          action: 'move',\n          name: this.ownname\n        }));\n        this.context.stroke(); //toolbar.context.fillRect(e.pageX - e.target.offsetLeft, e.pageY - e.target.offsetTop, 2, 2);\n      }\n    };\n\n    makeAutoObservable(this);\n  }\n\n  setToolbar(val) {\n    this.toolbar = val;\n  }\n\n  addName(name) {\n    //this.names = [...this.names, {name, x: 0, y: 0}];\n    this.names.push({\n      name,\n      x: 0,\n      y: 0\n    });\n  }\n\n  changePositionByName(name, newX, newY) {\n    console.log('thisnames', this.names[0].name);\n    this.names.forEach(el => console.log('name', el.name));\n    console.log('inputname', name);\n    let idx = this.names.findIndex(el => el.name == name);\n    console.log('idx', idx);\n    this.names[idx] = {\n      name,\n      x: newX,\n      y: newY\n    }; //console.log('updd', this.names);\n  }\n\n  setWs(ws) {\n    this.ws = ws;\n  }\n\n  setCanvas(val) {\n    this.canvas = val;\n    this.context = this.canvas.getContext('2d');\n  }\n\n  draw(x, y, action) {\n    console.log('draw', x, y); //this.context.fillRect(x, y, 2, 2);\n\n    switch (action) {\n      case 'down':\n        this.context.beginPath();\n        this.context.moveTo(x, y);\n        break;\n\n      case 'move':\n        this.context.lineTo(x, y);\n        this.context.stroke();\n        break;\n    } // this.context.beginPath();\n    // this.context.moveTo(x, y);\n    // this.context.lineTo(x, y);\n    // this.context.stroke();\n\n  }\n\n}\n\nexport default new Toolbar();","map":{"version":3,"sources":["/home/operatorzhukov/Документы/websocket/front/src/store/toolbar.js"],"names":["makeAutoObservable","Toolbar","constructor","toolbar","canvas","context","toggle","ws","ownname","names","name","x","y","down","e","beginPath","moveTo","pageX","target","offsetLeft","pageY","offsetTop","send","JSON","stringify","method","action","up","move","lineTo","stroke","setToolbar","val","addName","push","changePositionByName","newX","newY","console","log","forEach","el","idx","findIndex","setWs","setCanvas","getContext","draw"],"mappings":"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","sourcesContent":["import {makeAutoObservable} from 'mobx'\n\nclass Toolbar {\n    toolbar = null;\n    canvas = null;\n    context = null;\n    toggle = false;\n    ws = null;\n    ownname = null;\n    names = [{\n        name: 'ziga',\n        x: 0,\n        y: 0\n    },\n    {\n        name: 'twoi',\n        x: 0,\n        y: 0\n    }\n    ];\n    //wsId = null;\n    constructor() {\n        makeAutoObservable(this);\n    }\n\n    setToolbar(val) {\n        this.toolbar = val;\n    }\n\n    addName(name) {\n        //this.names = [...this.names, {name, x: 0, y: 0}];\n        this.names.push({name, x: 0, y: 0});\n    }\n\n    changePositionByName(name, newX, newY) {\n        console.log('thisnames', this.names[0].name);\n        this.names.forEach(el => console.log('name', el.name));\n        console.log('inputname', name);\n        let idx = this.names.findIndex(el => el.name == name);\n        console.log('idx', idx);\n        this.names[idx] = {name, x: newX, y: newY};\n        //console.log('updd', this.names);\n    }\n\n    setWs(ws) {\n        this.ws = ws;\n    }\n\n    setCanvas(val) {\n        this.canvas = val;\n        this.context = this.canvas.getContext('2d');\n    }\n\n    down = (e) => {\n        this.toggle = true;\n        this.context.beginPath();\n        this.context.moveTo(e.pageX - e.target.offsetLeft, e.pageY - e.target.offsetTop);\n        this.ws.send(JSON.stringify({\n            method: 'paint',\n            x: e.pageX - e.target.offsetLeft,\n            y: e.pageY - e.target.offsetTop,\n            action: 'down',\n            name: this.ownname\n        }));\n        \n    }\n\n    up = (e) => {\n        this.toggle = false;\n    }\n\n    move = (e) => {\n        if (this.toggle) {\n            this.context.lineTo(e.pageX - e.target.offsetLeft, e.pageY - e.target.offsetTop);\n            this.ws.send(JSON.stringify({\n                method: 'paint',\n                x: e.pageX - e.target.offsetLeft,\n                y: e.pageY - e.target.offsetTop,\n                action: 'move',\n                name: this.ownname\n            }));\n            this.context.stroke();\n            //toolbar.context.fillRect(e.pageX - e.target.offsetLeft, e.pageY - e.target.offsetTop, 2, 2);\n        }\n    }\n\n    draw(x,y, action) {\n        console.log('draw', x, y);\n\n        //this.context.fillRect(x, y, 2, 2);\n        switch (action) {\n            case 'down':\n                this.context.beginPath();\n                this.context.moveTo(x, y);\n                break;\n            case 'move':\n                this.context.lineTo(x, y);\n                this.context.stroke();\n                break;\n        }\n        \n\n        // this.context.beginPath();\n        // this.context.moveTo(x, y);\n        // this.context.lineTo(x, y);\n        // this.context.stroke();\n    }\n}\n\nexport default new Toolbar();"]},"metadata":{},"sourceType":"module"}