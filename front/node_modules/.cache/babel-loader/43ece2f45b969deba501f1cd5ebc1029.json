{"ast":null,"code":"const init = false;\nexport const authReducer = function () {\n  let state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : init;\n  let action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case \"SET_AUTH\":\n      state = { ...state,\n        auth: action.payload\n      };\n      return state;\n\n    default:\n      return state;\n  }\n};","map":{"version":3,"sources":["/home/operator3/Документы/newBD/front/src/store/reducers/authReducer.js"],"names":["init","authReducer","state","action","type","auth","payload"],"mappings":"AAAA,MAAMA,IAAI,GAAG,KAAb;AAEA,OAAO,MAAMC,WAAW,GAAG,YAA0B;AAAA,MAAzBC,KAAyB,uEAAjBF,IAAiB;AAAA,MAAXG,MAAW;;AACjD,UAAQA,MAAM,CAACC,IAAf;AACI,SAAK,UAAL;AACIF,MAAAA,KAAK,GAAG,EAAC,GAAGA,KAAJ;AAAWG,QAAAA,IAAI,EAAEF,MAAM,CAACG;AAAxB,OAAR;AACA,aAAOJ,KAAP;;AACJ;AACI,aAAOA,KAAP;AALR;AAOH,CARM","sourcesContent":["const init = false\n\nexport const authReducer = (state = init, action) => {\n    switch (action.type) {\n        case \"SET_AUTH\":\n            state = {...state, auth: action.payload};\n            return state;\n        default:\n            return state;\n    }\n}"]},"metadata":{},"sourceType":"module"}