{"ast":null,"code":"var _jsxFileName = \"/home/operator3/\\u0414\\u043E\\u043A\\u0443\\u043C\\u0435\\u043D\\u0442\\u044B/websocket/front/src/components/Toolbar.jsx\";\nimport { useState } from \"react\";\nimport Button from '@mui/material/Button';\nimport Container from '@mui/material/Container';\nimport Grid from '@mui/material/Grid';\nimport cl from '../styles/Toolbar.module.css';\nimport FormatPaintIcon from '@mui/icons-material/FormatPaint';\nimport LayersClearIcon from '@mui/icons-material/LayersClear';\nimport { observer } from \"mobx-react-lite\";\nimport toolbar from \"../store/toolbar\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const Toolbar = observer(_c = () => {\n  const takeBrush = () => {\n    toolbar.setToolbar('brush');\n  };\n\n  const clearArea = () => {\n    toolbar.context.clearRect(0, 0, toolbar.canvas.width, toolbar.canvas.height);\n  };\n\n  const sendMessage = () => {\n    let ws = new WebSocket('ws://localhost:5000/');\n\n    ws.onopen = () => {\n      console.log('opened');\n      const data = {\n        id: (Math.random() * 10).toFixed(0)\n      };\n      ws.send(JSON.stringify());\n    };\n\n    ws.onmessage = data => {\n      console.log('mes', data);\n    }; // ws.onopen((data) => {\n    //     console.log('opened', data);\n    // });\n    // ws.onmessage((data) => {\n    //     console.log('message', data);\n    // })\n\n  };\n\n  return /*#__PURE__*/_jsxDEV(Grid, {\n    container: true,\n    className: cl.Toolbar,\n    children: [\"\\u041F\\u0430\\u043D\\u0435\\u043B\\u044C \\u0438\\u043D\\u0441\\u0442\\u0440\\u0443\\u043C\\u0435\\u043D\\u0442\\u043E\\u0432\", /*#__PURE__*/_jsxDEV(FormatPaintIcon, {\n      fontSize: \"large\",\n      onClick: takeBrush,\n      className: cl.Icon\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(LayersClearIcon, {\n      fontSize: \"large\",\n      onClick: clearArea\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      variant: \"primary\",\n      onClick: sendMessage,\n      children: \"WS\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 43,\n    columnNumber: 9\n  }, this);\n});\n_c2 = Toolbar;\nexport default Toolbar;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"Toolbar$observer\");\n$RefreshReg$(_c2, \"Toolbar\");","map":{"version":3,"sources":["/home/operator3/Документы/websocket/front/src/components/Toolbar.jsx"],"names":["useState","Button","Container","Grid","cl","FormatPaintIcon","LayersClearIcon","observer","toolbar","Toolbar","takeBrush","setToolbar","clearArea","context","clearRect","canvas","width","height","sendMessage","ws","WebSocket","onopen","console","log","data","id","Math","random","toFixed","send","JSON","stringify","onmessage","Icon"],"mappings":";AAAA,SAASA,QAAT,QAAyB,OAAzB;AACA,OAAOC,MAAP,MAAmB,sBAAnB;AACA,OAAOC,SAAP,MAAsB,yBAAtB;AACA,OAAOC,IAAP,MAAiB,oBAAjB;AACA,OAAOC,EAAP,MAAe,8BAAf;AACA,OAAOC,eAAP,MAA4B,iCAA5B;AACA,OAAOC,eAAP,MAA4B,iCAA5B;AACA,SAASC,QAAT,QAAyB,iBAAzB;AACA,OAAOC,OAAP,MAAoB,kBAApB;;AACA,OAAO,MAAMC,OAAO,GAAGF,QAAQ,MAAC,MAAM;AAElC,QAAMG,SAAS,GAAG,MAAM;AACpBF,IAAAA,OAAO,CAACG,UAAR,CAAmB,OAAnB;AACH,GAFD;;AAGA,QAAMC,SAAS,GAAG,MAAM;AACpBJ,IAAAA,OAAO,CAACK,OAAR,CAAgBC,SAAhB,CAA0B,CAA1B,EAA6B,CAA7B,EAAgCN,OAAO,CAACO,MAAR,CAAeC,KAA/C,EAAsDR,OAAO,CAACO,MAAR,CAAeE,MAArE;AACH,GAFD;;AAIA,QAAMC,WAAW,GAAG,MAAM;AACtB,QAAIC,EAAE,GAAG,IAAIC,SAAJ,CAAc,sBAAd,CAAT;;AAEAD,IAAAA,EAAE,CAACE,MAAH,GAAY,MAAM;AACdC,MAAAA,OAAO,CAACC,GAAR,CAAY,QAAZ;AACA,YAAMC,IAAI,GAAG;AACTC,QAAAA,EAAE,EAAE,CAACC,IAAI,CAACC,MAAL,KAAgB,EAAjB,EAAqBC,OAArB,CAA6B,CAA7B;AADK,OAAb;AAGAT,MAAAA,EAAE,CAACU,IAAH,CAAQC,IAAI,CAACC,SAAL,EAAR;AACH,KAND;;AAQAZ,IAAAA,EAAE,CAACa,SAAH,GAAgBR,IAAD,IAAU;AACrBF,MAAAA,OAAO,CAACC,GAAR,CAAY,KAAZ,EAAmBC,IAAnB;AACH,KAFD,CAXsB,CActB;AACA;AACA;AAEA;AACA;AACA;;AACH,GArBD;;AAuBA,sBACI,QAAC,IAAD;AAAM,IAAA,SAAS,MAAf;AAAgB,IAAA,SAAS,EAAEpB,EAAE,CAACK,OAA9B;AAAA,6IAEI,QAAC,eAAD;AAAiB,MAAA,QAAQ,EAAC,OAA1B;AAAkC,MAAA,OAAO,EAAEC,SAA3C;AAAsD,MAAA,SAAS,EAAEN,EAAE,CAAC6B;AAApE;AAAA;AAAA;AAAA;AAAA,YAFJ,eAGI,QAAC,eAAD;AAAiB,MAAA,QAAQ,EAAC,OAA1B;AAAkC,MAAA,OAAO,EAAErB;AAA3C;AAAA;AAAA;AAAA;AAAA,YAHJ,eAII,QAAC,MAAD;AAAQ,MAAA,OAAO,EAAC,SAAhB;AAA0B,MAAA,OAAO,EAAEM,WAAnC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAJJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAQH,CAxC8B,CAAxB;MAAMT,O;AA0Cb,eAAeA,OAAf","sourcesContent":["import { useState } from \"react\";\nimport Button from '@mui/material/Button';\nimport Container from '@mui/material/Container';\nimport Grid from '@mui/material/Grid';\nimport cl from '../styles/Toolbar.module.css';\nimport FormatPaintIcon from '@mui/icons-material/FormatPaint';\nimport LayersClearIcon from '@mui/icons-material/LayersClear';\nimport { observer } from \"mobx-react-lite\";\nimport toolbar from \"../store/toolbar\";\nexport const Toolbar = observer(() => {\n\n    const takeBrush = () => {\n        toolbar.setToolbar('brush');\n    }\n    const clearArea = () => {\n        toolbar.context.clearRect(0, 0, toolbar.canvas.width, toolbar.canvas.height);\n    }\n\n    const sendMessage = () => {\n        let ws = new WebSocket('ws://localhost:5000/');\n\n        ws.onopen = () => {\n            console.log('opened');\n            const data = {\n                id: (Math.random() * 10).toFixed(0)\n            }\n            ws.send(JSON.stringify());\n        }\n\n        ws.onmessage = (data) => {\n            console.log('mes', data);\n        }\n        // ws.onopen((data) => {\n        //     console.log('opened', data);\n        // });\n\n        // ws.onmessage((data) => {\n        //     console.log('message', data);\n        // })\n    }\n\n    return (\n        <Grid container className={cl.Toolbar}>\n            Панель инструментов\n            <FormatPaintIcon fontSize=\"large\" onClick={takeBrush} className={cl.Icon}/>\n            <LayersClearIcon fontSize=\"large\" onClick={clearArea} />\n            <Button variant=\"primary\" onClick={sendMessage}>WS</Button>\n        </Grid>\n    )\n});\n\nexport default Toolbar"]},"metadata":{},"sourceType":"module"}