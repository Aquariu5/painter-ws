{"ast":null,"code":"var _jsxFileName = \"/home/operatorzhukov/\\u0414\\u043E\\u043A\\u0443\\u043C\\u0435\\u043D\\u0442\\u044B/websocket/front/src/components/Canvas.jsx\",\n    _s = $RefreshSig$();\n\nimport { useContext, useEffect, useRef, useState } from \"react\";\nimport cl from '../styles/Canvas.module.css';\nimport toolbar from \"../store/toolbar\";\nimport { observer } from \"mobx-react-lite\";\nimport Name from \"./Name\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Test = observer(_c = _s(_ref => {\n  _s();\n\n  let {\n    children\n  } = _ref;\n  const canvas = useRef(); //const ctx =  canvas.getContext('2d');\n\n  const [top, setTop] = useState(0);\n  const [left, setLeft] = useState(0);\n  const [display, setDisplay] = useState('none');\n  useEffect(() => {\n    toolbar.setCanvas(canvas.current);\n    let ws = new WebSocket('ws://localhost:5000/');\n    toolbar.setWs(ws);\n\n    toolbar.ws.onopen = () => {\n      console.log('opened');\n      let id = (Math.random() * 100).toFixed(0);\n      const data = {\n        id: id,\n        method: 'connection',\n        name: 'client' + id\n      };\n      toolbar.ws.send(JSON.stringify(data));\n    };\n\n    toolbar.ws.onmessage = data => {\n      console.log('mes', data);\n      data = JSON.parse(data.data);\n\n      switch (data.method) {\n        case 'paint':\n          toolbar.draw(data.x, data.y, data.action);\n          toolbar.changePositionByName(data.name, data.x, data.u + 100); // setTop(data.y + 100);\n          // setLeft(data.x);\n          // setDisplay('block');\n          //window.getElementById('names').appendChild('div');\n\n          break;\n\n        case 'success':\n          toolbar.addName(data.name);\n          break;\n      }\n    }; //console.log('canvas', toolbar.canvas);\n\n  }, []);\n  const [toggle, setToggle] = useState(false);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      display: 'flex',\n      justifyContent: 'center',\n      alignItems: 'center'\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"canvas\", {\n      width: window.innerWidth - 50,\n      height: window.innerHeight - 200,\n      className: cl.Canvas,\n      ref: canvas,\n      onMouseDown: toolbar.down,\n      onMouseUp: toolbar.up,\n      onMouseMove: toolbar.move\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      id: \"names\",\n      children: children\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 13\n    }, this), toolbar.names.length || toolbar.names(nameEl => /*#__PURE__*/_jsxDEV(Name, {\n      name: nameEl.name,\n      left: nameEl.x,\n      top: nameEl.y\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 21\n    }, this))]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 53,\n    columnNumber: 9\n  }, this);\n}, \"qlO2hDF17SUPR9wHc/NSvmF6dRw=\"));\n_c2 = Test;\nexport default Test;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"Test$observer\");\n$RefreshReg$(_c2, \"Test\");","map":{"version":3,"sources":["/home/operatorzhukov/Документы/websocket/front/src/components/Canvas.jsx"],"names":["useContext","useEffect","useRef","useState","cl","toolbar","observer","Name","Test","children","canvas","top","setTop","left","setLeft","display","setDisplay","setCanvas","current","ws","WebSocket","setWs","onopen","console","log","id","Math","random","toFixed","data","method","name","send","JSON","stringify","onmessage","parse","draw","x","y","action","changePositionByName","u","addName","toggle","setToggle","justifyContent","alignItems","window","innerWidth","innerHeight","Canvas","down","up","move","names","length","nameEl"],"mappings":"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","sourcesContent":["import { useContext, useEffect, useRef, useState } from \"react\";\nimport cl from '../styles/Canvas.module.css';\nimport toolbar from \"../store/toolbar\";\nimport { observer } from \"mobx-react-lite\";\nimport Name from \"./Name\";\nconst Test = observer(({children}) => {\n    const canvas = useRef();\n    //const ctx =  canvas.getContext('2d');\n    const [top, setTop] = useState(0);\n    const [left, setLeft] = useState(0);\n    const [display, setDisplay] = useState('none');\n    useEffect(() => {\n        toolbar.setCanvas(canvas.current);\n        let ws = new WebSocket('ws://localhost:5000/');\n        toolbar.setWs(ws);\n        \n        toolbar.ws.onopen = () => {\n            console.log('opened');\n            let id = (Math.random() * 100).toFixed(0);\n            const data = {\n                id: id,\n                method: 'connection',\n                name: 'client' + id\n            }\n            toolbar.ws.send(JSON.stringify(data));\n        }\n\n        toolbar.ws.onmessage = (data) => {\n            console.log('mes', data);\n            data = JSON.parse(data.data);\n            switch (data.method) {\n                case 'paint':\n                    toolbar.draw(data.x, data.y, data.action);\n                    toolbar.changePositionByName(data.name, data.x, data.u + 100);\n                    // setTop(data.y + 100);\n                    // setLeft(data.x);\n                    // setDisplay('block');\n                    //window.getElementById('names').appendChild('div');\n\n                    break;\n                case 'success':\n                    toolbar.addName(data.name);\n                    break;\n            }\n        }\n        //console.log('canvas', toolbar.canvas);\n    }, []);\n    const [toggle, setToggle] = useState(false);\n    \n    \n\n    return (\n        <div style={{display: 'flex', justifyContent: 'center', alignItems: 'center'}}>\n            <canvas \n                width={window.innerWidth - 50}\n                height={window.innerHeight - 200}\n                className={cl.Canvas}\n                ref={canvas}\n                onMouseDown={toolbar.down}\n                onMouseUp={toolbar.up}\n                onMouseMove={toolbar.move}\n                >\n            </canvas>\n            <div id=\"names\">\n                {children}\n            </div>\n            {\n                toolbar.names.length ||\n                toolbar.names(nameEl => \n                    <Name\n                        name={nameEl.name}\n                        left={nameEl.x}\n                        top={nameEl.y}\n                    />\n                )\n            }\n            {/* <div className={cl.Name} style={{display: display, top, left}}>{toolbar.name}</div> */}\n        </div>\n\n    )\n});\n\nexport default Test"]},"metadata":{},"sourceType":"module"}