{"ast":null,"code":"import { makeAutoObservable } from 'mobx';\n\nclass Toolbar {\n  //wsId = null;\n  constructor() {\n    this.toolbar = null;\n    this.canvas = null;\n    this.context = null;\n    this.toggle = false;\n    this.ws = null;\n    this.ownname = null;\n    this.names = [];\n\n    this.down = e => {\n      this.toggle = true;\n      this.context.beginPath();\n      this.context.moveTo(e.pageX - e.target.offsetLeft, e.pageY - e.target.offsetTop);\n      this.ws.send(JSON.stringify({\n        method: 'paint',\n        x: e.pageX - e.target.offsetLeft,\n        y: e.pageY - e.target.offsetTop,\n        action: 'down',\n        name: this.ownname\n      }));\n    };\n\n    this.up = e => {\n      this.toggle = false;\n      this.ws.send(JSON.stringify({\n        method: 'paint',\n        x: e.pageX - e.target.offsetLeft,\n        y: e.pageY - e.target.offsetTop,\n        action: 'up',\n        name: this.ownname\n      }));\n    };\n\n    this.move = e => {\n      if (this.toggle) {\n        this.context.lineTo(e.pageX - e.target.offsetLeft, e.pageY - e.target.offsetTop);\n        this.ws.send(JSON.stringify({\n          method: 'paint',\n          x: e.pageX - e.target.offsetLeft,\n          y: e.pageY - e.target.offsetTop,\n          action: 'move',\n          name: this.ownname\n        }));\n        this.context.stroke(); //toolbar.context.fillRect(e.pageX - e.target.offsetLeft, e.pageY - e.target.offsetTop, 2, 2);\n      }\n    };\n\n    makeAutoObservable(this);\n  }\n\n  setToolbar(val) {\n    this.toolbar = val;\n  }\n\n  addName(name) {\n    //this.names = [...this.names, {name, x: 0, y: 0}];\n    let idx = this.names.findIndex(el => el.name == name);\n    if (idx == -1) this.names.push({\n      name,\n      x: 0,\n      y: 0\n    });\n  }\n\n  changePositionByName(name, newX, newY) {\n    console.log('thisnames', this.names[0].name);\n    this.names.forEach(el => console.log('name', el.name));\n    console.log('inputname', name);\n    let idx = this.names.findIndex(el => el.name == name);\n    console.log('idx', idx);\n    this.names[idx] = {\n      name,\n      x: newX,\n      y: newY\n    }; //console.log('updd', this.names);\n  }\n\n  setWs(ws) {\n    this.ws = ws;\n  }\n\n  setCanvas(val) {\n    this.canvas = val;\n    this.context = this.canvas.getContext('2d');\n  }\n\n  draw(x, y, action) {\n    console.log('draw', x, y); //this.context.fillRect(x, y, 2, 2);\n\n    switch (action) {\n      case 'down':\n        this.context.beginPath();\n        this.context.moveTo(x, y);\n        break;\n\n      case 'move':\n        this.context.lineTo(x, y);\n        this.context.stroke();\n        break;\n    } // this.context.beginPath();\n    // this.context.moveTo(x, y);\n    // this.context.lineTo(x, y);\n    // this.context.stroke();\n\n  }\n\n}\n\nexport default new Toolbar();","map":{"version":3,"sources":["/home/operatorzhukov/Документы/websocket/front/src/store/toolbar.js"],"names":["makeAutoObservable","Toolbar","constructor","toolbar","canvas","context","toggle","ws","ownname","names","down","e","beginPath","moveTo","pageX","target","offsetLeft","pageY","offsetTop","send","JSON","stringify","method","x","y","action","name","up","move","lineTo","stroke","setToolbar","val","addName","idx","findIndex","el","push","changePositionByName","newX","newY","console","log","forEach","setWs","setCanvas","getContext","draw"],"mappings":"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","sourcesContent":["import {makeAutoObservable} from 'mobx'\n\nclass Toolbar {\n    toolbar = null;\n    canvas = null;\n    context = null;\n    toggle = false;\n    ws = null;\n    ownname = null;\n    names = [];\n    //wsId = null;\n    constructor() {\n        makeAutoObservable(this);\n    }\n\n    setToolbar(val) {\n        this.toolbar = val;\n    }\n\n    addName(name) {\n        //this.names = [...this.names, {name, x: 0, y: 0}];\n        let idx = this.names.findIndex(el => el.name == name);\n        if (idx == -1)\n            this.names.push({name, x: 0, y: 0});\n    }\n\n    changePositionByName(name, newX, newY) {\n        console.log('thisnames', this.names[0].name);\n        this.names.forEach(el => console.log('name', el.name));\n        console.log('inputname', name);\n        let idx = this.names.findIndex(el => el.name == name);\n        console.log('idx', idx);\n        this.names[idx] = {name, x: newX, y: newY};\n        //console.log('updd', this.names);\n    }\n\n    setWs(ws) {\n        this.ws = ws;\n    }\n\n    setCanvas(val) {\n        this.canvas = val;\n        this.context = this.canvas.getContext('2d');\n    }\n\n    down = (e) => {\n        this.toggle = true;\n        this.context.beginPath();\n        this.context.moveTo(e.pageX - e.target.offsetLeft, e.pageY - e.target.offsetTop);\n        this.ws.send(JSON.stringify({\n            method: 'paint',\n            x: e.pageX - e.target.offsetLeft,\n            y: e.pageY - e.target.offsetTop,\n            action: 'down',\n            name: this.ownname\n        }));\n        \n    }\n\n    up = (e) => {\n        this.toggle = false;\n        this.ws.send(JSON.stringify({\n            method: 'paint',\n            x: e.pageX - e.target.offsetLeft,\n            y: e.pageY - e.target.offsetTop,\n            action: 'up',\n            name: this.ownname\n        }));\n    }\n\n    move = (e) => {\n        if (this.toggle) {\n            this.context.lineTo(e.pageX - e.target.offsetLeft, e.pageY - e.target.offsetTop);\n            this.ws.send(JSON.stringify({\n                method: 'paint',\n                x: e.pageX - e.target.offsetLeft,\n                y: e.pageY - e.target.offsetTop,\n                action: 'move',\n                name: this.ownname\n            }));\n            this.context.stroke();\n            //toolbar.context.fillRect(e.pageX - e.target.offsetLeft, e.pageY - e.target.offsetTop, 2, 2);\n        }\n    }\n\n    draw(x,y, action) {\n        console.log('draw', x, y);\n\n        //this.context.fillRect(x, y, 2, 2);\n        switch (action) {\n            case 'down':\n                this.context.beginPath();\n                this.context.moveTo(x, y);\n                break;\n            case 'move':\n                this.context.lineTo(x, y);\n                this.context.stroke();\n                break;\n        }\n        \n\n        // this.context.beginPath();\n        // this.context.moveTo(x, y);\n        // this.context.lineTo(x, y);\n        // this.context.stroke();\n    }\n}\n\nexport default new Toolbar();"]},"metadata":{},"sourceType":"module"}