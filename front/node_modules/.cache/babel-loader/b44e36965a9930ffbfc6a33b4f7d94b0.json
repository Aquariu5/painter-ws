{"ast":null,"code":"var _jsxFileName = \"/home/operatorzhukov/\\u0414\\u043E\\u043A\\u0443\\u043C\\u0435\\u043D\\u0442\\u044B/websocket/front/src/components/Canvas.jsx\",\n    _s = $RefreshSig$();\n\nimport { useContext, useEffect, useRef, useState } from \"react\";\nimport cl from '../styles/Canvas.module.css';\nimport toolbar from \"../store/toolbar\";\nimport { observer } from \"mobx-react-lite\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Test = observer(_c = _s(() => {\n  _s();\n\n  const canvas = useRef(); //const ctx =  canvas.getContext('2d');\n\n  const [top, setTop] = useState(0);\n  const [left, setLeft] = useState(0);\n  const [display, setDisplay] = useState('none');\n  useEffect(() => {\n    toolbar.setCanvas(canvas.current);\n    let ws = new WebSocket('ws://localhost:5000/');\n    toolbar.setWs(ws);\n\n    toolbar.ws.onopen = () => {\n      console.log('opened');\n      const data = {\n        id: (Math.random() * 10).toFixed(0),\n        method: 'connection'\n      };\n      toolbar.ws.send(JSON.stringify(data));\n    };\n\n    toolbar.ws.onmessage = data => {\n      console.log('mes', data);\n      data = JSON.parse(data.data);\n\n      switch (data.method) {\n        case 'paint':\n          toolbar.draw(data.x, data.y, data.action);\n          setTop(data.y + 100);\n          setLeft(data.x);\n          setDisplay('block');\n          break;\n      }\n    }; //console.log('canvas', toolbar.canvas);\n\n  }, []);\n  const [toggle, setToggle] = useState(false);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      display: 'flex',\n      justifyContent: 'center',\n      alignItems: 'center'\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"canvas\", {\n      width: window.innerWidth - 50,\n      height: window.innerHeight - 200,\n      className: cl.Canvas,\n      ref: canvas,\n      onMouseDown: toolbar.down,\n      onMouseUp: toolbar.up,\n      onMouseMove: toolbar.move\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: cl.Name,\n      style: {\n        display,\n        top,\n        left\n      },\n      children: 'ffsf'\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 44,\n    columnNumber: 9\n  }, this);\n}, \"qlO2hDF17SUPR9wHc/NSvmF6dRw=\"));\n_c2 = Test;\nexport default Test;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"Test$observer\");\n$RefreshReg$(_c2, \"Test\");","map":{"version":3,"sources":["/home/operatorzhukov/Документы/websocket/front/src/components/Canvas.jsx"],"names":["useContext","useEffect","useRef","useState","cl","toolbar","observer","Test","canvas","top","setTop","left","setLeft","display","setDisplay","setCanvas","current","ws","WebSocket","setWs","onopen","console","log","data","id","Math","random","toFixed","method","send","JSON","stringify","onmessage","parse","draw","x","y","action","toggle","setToggle","justifyContent","alignItems","window","innerWidth","innerHeight","Canvas","down","up","move","Name"],"mappings":"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","sourcesContent":["import { useContext, useEffect, useRef, useState } from \"react\";\nimport cl from '../styles/Canvas.module.css';\nimport toolbar from \"../store/toolbar\";\nimport { observer } from \"mobx-react-lite\";\nconst Test = observer(() => {\n    const canvas = useRef();\n    //const ctx =  canvas.getContext('2d');\n    const [top, setTop] = useState(0);\n    const [left, setLeft] = useState(0);\n    const [display, setDisplay] = useState('none');\n    useEffect(() => {\n        toolbar.setCanvas(canvas.current);\n        let ws = new WebSocket('ws://localhost:5000/');\n        toolbar.setWs(ws);\n\n        toolbar.ws.onopen = () => {\n            console.log('opened');\n            const data = {\n                id: (Math.random() * 10).toFixed(0),\n                method: 'connection'\n            }\n            toolbar.ws.send(JSON.stringify(data));\n        }\n\n        toolbar.ws.onmessage = (data) => {\n            console.log('mes', data);\n            data = JSON.parse(data.data);\n            switch (data.method) {\n                case 'paint':\n                    toolbar.draw(data.x, data.y, data.action);\n                    setTop(data.y + 100);\n                    setLeft(data.x);\n                    setDisplay('block');\n                    break;\n            }\n        }\n        //console.log('canvas', toolbar.canvas);\n    }, []);\n    const [toggle, setToggle] = useState(false);\n    \n    \n\n    return (\n        <div style={{display: 'flex', justifyContent: 'center', alignItems: 'center'}}>\n            <canvas \n                width={window.innerWidth - 50}\n                height={window.innerHeight - 200}\n                className={cl.Canvas}\n                ref={canvas}\n                onMouseDown={toolbar.down}\n                onMouseUp={toolbar.up}\n                onMouseMove={toolbar.move}\n                >\n            </canvas>\n            <div className={cl.Name} style={{display, top, left}}>{'ffsf'}</div>\n        </div>\n\n    )\n});\n\nexport default Test"]},"metadata":{},"sourceType":"module"}